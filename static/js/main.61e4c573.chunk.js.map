{"version":3,"sources":["serviceWorker.js","form-stages/forms/form1.jsx","form-stages/forms/form2.jsx","form-stages/forms/form3.jsx","form-stages/stage.jsx","helper.jsx","form.jsx","index.js"],"names":["Boolean","window","location","hostname","match","form1","props","errors","fields","className","type","name","onChange","handleChange","value","placeholder","htmlFor","id","checked","data-check","handleItemOnChange","item","onClick","handleAddItem","items","map","index","key","data-value","handleItemRemove","stage","page","helper","length","test","Form","state","fruit","required","lastName","phone","email","currentPage","MaxPageNumber","valid","buttonError","e","target","dataset","check","validation","Object","keys","forEach","field","setState","console","log","handleNext","preventDefault","handlePre","push","itemValue","indexOf","filter","this","Component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.61e4c573.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\n\r\nfunction form1(props) {\r\n  const { errors, fields } = props;\r\n\r\n  return (\r\n    <div className=\"form-stage\">\r\n      <h1>CREATE YOUR ACCOUNT</h1>\r\n      <p>This is step one</p>\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        onChange={props.handleChange}\r\n        value={fields[\"name\"] || \"\"}\r\n        placeholder=\"Name*\"\r\n      />\r\n      <span>{errors[\"name\"]}</span>\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"lastName\"\r\n        onChange={props.handleChange}\r\n        value={fields[\"lastName\"] || \"\"}\r\n        placeholder=\"Lastname*\"\r\n      />\r\n      <span>{errors[\"lastName\"]}</span>\r\n\r\n      <input\r\n        type=\"tel\"\r\n        name=\"phone\"\r\n        onChange={props.handleChange}\r\n        value={fields[\"phone\"] || \"\"}\r\n        placeholder=\"Phone*\"\r\n      />\r\n      <span>{errors[\"phone\"]}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default form1;\r\n","import React from \"react\";\r\n\r\nfunction form1(props) {\r\n  const { errors, fields } = props;\r\n\r\n  return (\r\n    <div className=\"form-stage\">\r\n      <h1>more details</h1>\r\n      <p>This is step two</p>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        onChange={props.handleChange}\r\n        value={fields[\"email\"] || \"\"}\r\n        placeholder=\"Email*\"\r\n      />\r\n      <span>{errors[\"email\"]}</span>\r\n\r\n      <div className=\"gender\">\r\n        <h2>Choose your Gender</h2>\r\n        <label htmlFor=\"male\">Male</label>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"male\"\r\n          name=\"gender\"\r\n          onChange={props.handleChange}\r\n          value=\"male\"\r\n        />\r\n        <label htmlFor=\"female\">Female</label>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"female\"\r\n          name=\"gender\"\r\n          onChange={props.handleChange}\r\n          value=\"female\"\r\n        />\r\n        <label htmlFor=\"other\">Other</label>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"other\"\r\n          name=\"gender\"\r\n          onChange={props.handleChange}\r\n          value=\"other\"\r\n        />\r\n      </div>\r\n      <div className=\"fruit\">\r\n        <h2>Choose your fruit</h2>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"fruit\"\r\n          onChange={props.handleChange}\r\n          value=\"apple\"\r\n          checked={fields[\"fruit\"][\"apple\"] || false}\r\n          data-check={fields[\"fruit\"][\"apple\"]}\r\n        />\r\n        Apple\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"fruit\"\r\n          onChange={props.handleChange}\r\n          value=\"orange\"\r\n          checked={fields[\"fruit\"][\"orange\"] || false}\r\n          data-check={fields[\"fruit\"][\"orange\"]}\r\n        />\r\n        Orange\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"fruit\"\r\n          onChange={props.handleChange}\r\n          value=\"banana\"\r\n          checked={fields[\"fruit\"][\"banana\"] || false}\r\n          data-check={fields[\"fruit\"][\"banana\"]}\r\n        />\r\n        Banana\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default form1;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction form1(props) {\r\n  const errors = props.errors;\r\n\r\n  return (\r\n    <div className=\"form-stage\">\r\n      <h1>Add your items please</h1>\r\n      <p>this is the final step</p>\r\n      <label htmlFor=\"itemInput\">Add Items:</label>\r\n      <div className=\"addItemBox\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"itemInput\"\r\n          onChange={props.handleItemOnChange}\r\n          value={props.item}\r\n          placeholder=\"e.g. A potato\"\r\n        />\r\n        <input type=\"submit\" onClick={props.handleAddItem} value=\"Add Item\" />\r\n      </div>\r\n      <ul>\r\n        {props.items.map((item, index) => (\r\n          <li key={index} data-value={item} onClick={props.handleItemRemove}>\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default form1;\r\n","import React from \"react\";\r\nimport Form1 from \"./forms/form1\";\r\nimport Form2 from \"./forms/form2\";\r\nimport Form3 from \"./forms/form3\";\r\n\r\nfunction stage(props) {\r\n  switch (props.page) {\r\n    case 1:\r\n      return (\r\n        <Form1\r\n          handleChange={props.handleChange}\r\n          errors={props.errors}\r\n          fields={props.fields}\r\n        />\r\n      );\r\n      break;\r\n\r\n    case 2:\r\n      return (\r\n        <Form2\r\n          handleChange={props.handleChange}\r\n          errors={props.errors}\r\n          fields={props.fields}\r\n        />\r\n      );\r\n      break;\r\n\r\n    case 3:\r\n      return (\r\n        <Form3\r\n          handleChange={props.handleChange}\r\n          errors={props.errors}\r\n          handleItemOnChange={props.handleItemOnChange}\r\n          handleAddItem={props.handleAddItem}\r\n          item={props.item}\r\n          items={props.items}\r\n          handleItemRemove={props.handleItemRemove}\r\n        />\r\n      );\r\n      break;\r\n\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n\r\nexport default stage;\r\n","import React from \"react\";\r\n\r\nfunction helper(value, type) {\r\n  switch (type) {\r\n    case \"text\":\r\n      return value.length > 0 || \"*can not be empty!\";\r\n      break;\r\n    case \"email\":\r\n      const regex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n      return regex.test(value) || \"*invalid email address\";\r\n      break;\r\n    case \"tel\":\r\n      const regexPhone = /\\d{10}/;\r\n      return regexPhone.test(value) || \"*invalid phone number\";\r\n      break;\r\n  }\r\n}\r\n\r\nexport default helper;\r\n","import React, { Component } from \"react\";\r\nimport Stage from \"./form-stages/stage\";\r\nimport helper from \"./helper\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    fields: {\r\n      fruit: {},\r\n    },\r\n    required: [\r\n      { name: false, lastName: false, phone: false },\r\n      { email: false },\r\n    ],\r\n    errors: {},\r\n    currentPage: 1,\r\n    MaxPageNumber: 3,\r\n    items: [],\r\n    item: \"\",\r\n    valid: false,\r\n    buttonError: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let fields = { ...this.state.fields };\r\n    let required = this.state.required[this.state.currentPage - 1];\r\n    if (e.target.type === \"checkbox\") {\r\n      fields[e.target.name][e.target.value] = !Boolean(e.target.dataset.check);\r\n    } else {\r\n      let validation = helper(e.target.value, e.target.type);\r\n      if (typeof validation === \"boolean\") {\r\n        this.state.errors[e.target.name] = \"\";\r\n        required[e.target.name] = true;\r\n      } else {\r\n        this.state.errors[e.target.name] = validation;\r\n        this.state.valid = false;\r\n        required[e.target.name] = false;\r\n      }\r\n      fields[e.target.name] = e.target.value;\r\n    }\r\n    //check for errors\r\n    const errors = this.state.errors;\r\n    let valid = true;\r\n    Object.keys(required).forEach((field) => {\r\n      if (!required[field]) valid = false;\r\n    });\r\n\r\n    this.setState({ fields, valid });\r\n\r\n    console.log(this.state.required);\r\n  };\r\n  handleNext = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.state.errors;\r\n    let valid = true;\r\n    Object.keys(errors).forEach((field) => {\r\n      if (errors[field] !== \"\") valid = false;\r\n    });\r\n    if (valid && this.state.valid) {\r\n      let page = this.state.currentPage;\r\n      page++;\r\n\r\n      this.setState({ currentPage: page, buttonError: \"\", valid: false });\r\n    } else {\r\n      this.setState({ buttonError: \"Please fill the required field\" });\r\n    }\r\n  };\r\n  handlePre = (e) => {\r\n    e.preventDefault();\r\n    let page = this.state.currentPage;\r\n    page--;\r\n\r\n    this.setState({ currentPage: page, valid: true });\r\n  };\r\n  handleItemOnChange = (e) => {\r\n    let item = e.target.value;\r\n    this.setState({ item });\r\n  };\r\n  handleAddItem = (e) => {\r\n    e.preventDefault();\r\n    let items = [...this.state.items];\r\n    let item = this.state.item;\r\n    if (item === \"\") return;\r\n    items.push(item);\r\n    item = \"\";\r\n    this.setState({ items, item });\r\n  };\r\n  handleItemRemove = (e) => {\r\n    let itemValue = e.target.dataset.value;\r\n    let items = this.state.items;\r\n    if (items.indexOf(itemValue) !== -1)\r\n      items = items.filter((item) => item !== itemValue);\r\n    this.setState({ items });\r\n  };\r\n  render() {\r\n    const {\r\n      currentPage,\r\n      MaxPageNumber,\r\n      errors,\r\n      fields,\r\n      item,\r\n      items,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <form>\r\n          <Stage\r\n            page={currentPage}\r\n            handleChange={this.handleChange}\r\n            errors={errors}\r\n            fields={fields}\r\n            handleItemOnChange={this.handleItemOnChange}\r\n            handleAddItem={this.handleAddItem}\r\n            item={item}\r\n            items={items}\r\n            handleItemRemove={this.handleItemRemove}\r\n          />\r\n\r\n          {currentPage > 1 ? (\r\n            <button onClick={this.handlePre}>Previous</button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {currentPage !== MaxPageNumber ? (\r\n            <button onClick={this.handleNext}>Next</button>\r\n          ) : (\r\n            <input type=\"submit\" value=\"submit\" />\r\n          )}\r\n\r\n          <span className=\"btnError\">{this.state.buttonError}</span>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Form from \"./form\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Form />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}